// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  discordId   String    @unique
  wallets     Wallet[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Wallet {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  address     String    @unique
  isVerified  Boolean   @default(false)
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Holder {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  address     String    @unique
  tokenCount  Int       @default(0)
  tokens      String[]  @default([])
  lastUpdated DateTime  @default(now())
  
  // Collection-specific holdings
  collectionHoldings CollectionHolding[]
}

model CollectionHolding {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  address         String
  contractAddress String
  tokenCount      Int       @default(0)
  tokens          String[]  @default([])
  lastUpdated     DateTime  @default(now())
  
  // Relations
  holder          Holder    @relation(fields: [holderId], references: [id])
  holderId        String    @db.ObjectId
  
  @@unique([address, contractAddress])
}
